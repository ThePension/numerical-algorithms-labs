**********************************************************************
* Nom du cours : Mathématiques spécifiques II
* Contexte : Projet
* Date : 05.06.2022
*
* Équipe : 
*  - Nicolas Aubert ;
*  - Lucas Gosteli ;
*  - Vincent Jeannin ;
*  - Théo Vuilliomenet.
**********************************************************************

Contexte
========
Dans le cadre de notre projet de mathématiques spécifiques 2, nous avons choisi de nous intéresser aux équations chaotiques.
Plus précisément, à une visualisation graphique d'une équation chaotique.

Pour ce faire, nous avons choisi d'utiliser l'exemple du double pendule.
Cependant, afin d'ajouter une difficulté et de l'originalité, nous remplacerons les tiges rigides des pendules par des ressorts.

Après une première phase de développement, nous avons du abandonner les ressorts pour des tiges rigides.
Ce choix est du à la complexité des calculs et au manque de connaissances sur les équations différentielles.
En effet, toute la partie visant à simplifier les équations différentielles du deuxième ordre ne fonctionnait pas dans notre implémentation.


Méthodes
========
Premièrement, pour l'affichage du double pendule nous avons utilisé p5.js qui est une libraire nous permettant de dessiner facilement en javascript.

Pour ce qui est des calculs, nous avons commencé par déterminé les équations permettant d'obtenir la position.
Ensuite, nous avons dérivé l'équation de la position pour obtenir la vitesse et dans un second temps l'accélération.
Ces équations ne prennent en compte que les angles des tiges avec la vertical et la longueur des tiges.

Par la suite, nous avons cherché les équations différentielles qui lient l'accélération du premier pendule à celle du deuxième.
Après cela, il a fallu simplifier ces équations afin d'obtenir une verision numérique et implémentable.
Pour cela, nous avons utilisé la méthode de Runge-Kutta.

Une fois les équations simplifiées il ne nous manquait plus qu'à implémenter une version JS à l'aide de p5.js.
Afin de visualiser au mieux l'aspect chaotique, nous affichons une multitude de pendule avec un décalage angulaire initial qui n'est pas visible par l'utilisateur.


Conclusion
==========
Notre projet permet de simuler l'évolution, selon la méthode de Runge-Kutta, du comportement du double pendule.
Après avoir lancé une multitude de pendules avec un décalage angulaire infime, nous obtenons, comme attendu, un résultat chaotique.
En effet, malgré un décalage initial de quelques pixels, il ne faut qu'on court lapse de temps pour que les doubles pendules évoluent différemment les uns des autres.


Références
==========
- https://www.myphysicslab.com/springs/double-2d-spring-en.html
- https://p5js.org/examples/
- https://thecodingtrain.com/CodingChallenges/160-spring-forces.html
- https://www.myphysicslab.com/pendulum/double-pendulum-en.html
- https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods